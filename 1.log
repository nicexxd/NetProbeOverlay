运行 gradle ：app：assembleDebug --stacktrace

欢迎使用 Gradle 8.7！

以下是此版本的亮点：
- 使用 Java 22 进行编译和测试
- 可缓存的 Groovy 脚本编译
- 惰性集合属性中的新方法

有关更多详细信息，请参阅https://docs.gradle.org/8.7/release-notes.html

启动 Gradle 守护进程（后续构建会更快）

> 配置项目：
构建配置为优先选择设置存储库而不是项目存储库，但存储库“Google”是由构建文件“build.gradle”添加的
构建配置为优先使用设置存储库而不是项目存储库，但存储库“MavenRepo”是由构建文件“build.gradle”添加的
构建配置为优先选择设置存储库而不是项目存储库，但存储库“Google”是由构建文件“build.gradle”添加的
构建配置为优先使用设置存储库而不是项目存储库，但存储库“MavenRepo”是由构建文件“build.gradle”添加的

> 任务 ：app：preBuild 最新
> 任务：app：preDebugBuild UP-TO-DATE
> 任务：app：mergeDebugNativeDebugMetadata NO-SOURCE
> 任务：app：checkKotlinGradlePluginConfigurationErrors
> 任务：app：checkDebugAarMetadata
> 任务：app：generateDebugResValues
> 任务：app：mapDebugSourceSetPaths
> 任务：app：generateDebugResources
> 任务：app：packageDebugResources
> 任务：app：mergeDebugResources
> 任务：app：createDebugCompatibleScreenManifests
> 任务：app：extractDeepLinksDebug
> 任务：app：parseDebugLocalResources

> 任务：app：processDebugMainManifest
package=“com.example.netprobeoverlay”，位于源AndroidManifest.xml：/home/runner/work/NetProbeOverlay/NetProbeOverlay/app/src/main/AndroidManifest.xml。
不再支持通过源AndroidManifest.xml中的 package 属性设置命名空间，并且该值将被忽略。
建议：从源AndroidManifest.xml/home/runner/work/NetProbeOverlay/NetProbeOverlay/app/src/main/AndroidManifest.xml中删除 package=“com.example.netprobeoverlay”。

> 任务：app：processDebugManifest
> 任务：app：processDebugManifestForPackage
> 任务：app：javaPreCompileDebug
> 任务 ：app：mergeDebugShaders
> 任务 ：app：compileDebugShaders NO-SOURCE
> 任务：app：generateDebugAssets 最新
> 任务：app：mergeDebugAssets
> 任务：app：compressDebugAssets
> 任务：app：desugarDebugFileDependencies
> 任务：app：processDebugResources
> 任务：app：checkDebugDuplicateClasses
> 任务：app：mergeDebugStartupProfile

> 任务：app：compileDebugKotlin
e：file:///home/runner/work/NetProbeOverlay/NetProbeOverlay/app/src/main/java/com/example/netprobeoverlay/overlay/OverlayService.kt:287:1 未解析的参考资料。由于接收器类型不匹配，以下候选项均不适用：
公共内联运算符乐趣 BigDecimal.unaryMinus（）：用 kotlin 定义的 BigDecimal
公共内联运算符 fun BigInteger.unaryMinus（）：用 kotlin 定义的 BigInteger
e：file:///home/runner/work/NetProbeOverlay/NetProbeOverlay/app/src/main/java/com/example/netprobeoverlay/overlay/OverlayService.kt:288:1 未解析的参考文献：+

> 任务 ：app：compileDebugKotlin 失败
> 任务：app：mergeExtDexDebug

FAILURE：构建失败，出现异常。

* 出了什么问题：
任务“：app：compileDebugKotlin”的执行失败。
> 执行 org.jetbrains.kotlin.compilerRunner.GradleCompilerRunnerWithWorkers$GradleKotlinCompilerWorkAction 时发生故障
> 编译错误。有关更多详细信息，请参阅日志

*尝试：
> 使用 --info 或 --debug 选项运行以获得更多日志输出。
> 使用 --scan 运行以获得完整的见解。
> 在以下位置获取更多帮助https://help.gradle.org。

* 例外情况是：
org.gradle.api.tasks.TaskExecutionException：任务“：app：compileDebugKotlin”的执行失败。
在 org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.lambda$executeIfValid$1（ExecuteActionsTaskExecuter.java：130）
在 org.gradle.internal.Try$Failure.ifSuccessfulOrElse（Try.java：282）
在 org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid（ExecuteActionsTaskExecuter.java：128）
在 org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute（ExecuteActionsTaskExecuter.java：116）
在 org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute（FinalizePropertiesTaskExecuter.java：46）
在 org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute（ResolveTaskExecutionModeExecuter.java：51）
在 org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute（SkipTaskWithNoActionsExecuter.java：57）
在 org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute（SkipOnlyIfTaskExecuter.java：74）
在 org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute（CatchExceptionTaskExecuter.java：36）
在 org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask（EventFiringTaskExecuter.java：77）
在 org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call（EventFiringTaskExecuter.java：55）
在 org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call（EventFiringTaskExecuter.java：52）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute（DefaultBuildOperationRunner.java：200）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute（DefaultBuildOperationRunner.java：195）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute（DefaultBuildOperationRunner.java：66）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute（DefaultBuildOperationRunner.java：59）
在 org.gradle.internal.operations.DefaultBuildOperationRunner.execute（DefaultBuildOperationRunner.java：157）
在 org.gradle.internal.operations.DefaultBuildOperationRunner.execute（DefaultBuildOperationRunner.java：59）
在 org.gradle.internal.operations.DefaultBuildOperationRunner.call（DefaultBuildOperationRunner.java：53）
在 org.gradle.internal.operations.DefaultBuildOperationExecutor.call（DefaultBuildOperationExecutor.java：73）
在 org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute（EventFiringTaskExecuter.java：52）
在 org.gradle.execution.plan.LocalTaskNodeExecutor.execute（LocalTaskNodeExecutor.java：42）
在 org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute（DefaultTaskExecutionGraph.java：331）
在 org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute（DefaultTaskExecutionGraph.java：318）
在 org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.lambda$execute$0（DefaultTaskExecutionGraph.java：314）
在 org.gradle.internal.operations.CurrentBuildOperationRef.with（CurrentBuildOperationRef.java：80）
在 org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute（DefaultTaskExecutionGraph.java：314）
在 org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute（DefaultTaskExecutionGraph.java：303）
在 org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute（DefaultPlanExecutor.java：463）
在 org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run（DefaultPlanExecutor.java：380）
在 org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute（ExecutorPolicy.java：64）
在 org.gradle.internal.concurrent.AbstractManagedExecutor$1.run（AbstractManagedExecutor.java：47）
原因：org.gradle.workers.internal.DefaultWorkerExecutor$WorkExecutionException：执行 org.jetbrains.kotlin.compilerRunner.GradleCompilerRunnerWithWorkers$GradleKotlinCompilerWorkAction 时发生故障
在 org.gradle.workers.internal.DefaultWorkerExecutor$WorkItemExecution.waitForCompletion（DefaultWorkerExecutor.java：287）
在 org.gradle.internal.work.DefaultAsyncWorkTracker.lambda$waitForItemsAndGatherFailures$2（DefaultAsyncWorkTracker.java：130）
在 org.gradle.internal.Factories$1.create（Factories.java：31）
在 org.gradle.internal.work.DefaultWorkerLeaseService.withoutLocks（DefaultWorkerLeaseService.java：336）
在 org.gradle.internal.work.DefaultWorkerLeaseService.withoutLocks（DefaultWorkerLeaseService.java：319）
在 org.gradle.internal.work.DefaultWorkerLeaseService.withoutLock（DefaultWorkerLeaseService.java：324）
在 org.gradle.internal.work.DefaultAsyncWorkTracker.waitForItemsAndGatherFailures（DefaultAsyncWorkTracker.java：126）
在 org.gradle.internal.work.DefaultAsyncWorkTracker.waitForItemsAndGatherFailures（DefaultAsyncWorkTracker.java：92）
在 org.gradle.internal.work.DefaultAsyncWorkTracker.waitForAll（DefaultAsyncWorkTracker.java：78）
在 org.gradle.internal.work.DefaultAsyncWorkTracker.waitForCompletion（DefaultAsyncWorkTracker.java：66）
在 org.gradle.api.internal.tasks.execution.TaskExecution$3.run（TaskExecution.java：252）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute（DefaultBuildOperationRunner.java：29）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute（DefaultBuildOperationRunner.java：26）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute（DefaultBuildOperationRunner.java：66）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute（DefaultBuildOperationRunner.java：59）
在 org.gradle.internal.operations.DefaultBuildOperationRunner.execute（DefaultBuildOperationRunner.java：157）
在 org.gradle.internal.operations.DefaultBuildOperationRunner.execute（DefaultBuildOperationRunner.java：59）
在 org.gradle.internal.operations.DefaultBuildOperationRunner.run（DefaultBuildOperationRunner.java：47）
在 org.gradle.internal.operations.DefaultBuildOperationExecutor.run（DefaultBuildOperationExecutor.java：68）
在 org.gradle.api.internal.tasks.execution.TaskExecution.executeAction（TaskExecution.java：229）
在 org.gradle.api.internal.tasks.execution.TaskExecution.executeActions（TaskExecution.java：212）
在 org.gradle.api.internal.tasks.execution.TaskExecution.executeWithPreviousOutputFiles（TaskExecution.java：195）
在 org.gradle.api.internal.tasks.execution.TaskExecution.execute（TaskExecution.java：162）
在 org.gradle.internal.execution.steps.ExecuteStep.executeInternal（ExecuteStep.java：105）
在 org.gradle.internal.execution.steps.ExecuteStep.access$000（ExecuteStep.java：44）
在 org.gradle.internal.execution.steps.ExecuteStep$1.call（ExecuteStep.java：59）
在 org.gradle.internal.execution.steps.ExecuteStep$1.call（ExecuteStep.java：56）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute（DefaultBuildOperationRunner.java：200）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute（DefaultBuildOperationRunner.java：195）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute（DefaultBuildOperationRunner.java：66）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute（DefaultBuildOperationRunner.java：59）
在 org.gradle.internal.operations.DefaultBuildOperationRunner.execute（DefaultBuildOperationRunner.java：157）
在 org.gradle.internal.operations.DefaultBuildOperationRunner.execute（DefaultBuildOperationRunner.java：59）
在 org.gradle.internal.operations.DefaultBuildOperationRunner.call（DefaultBuildOperationRunner.java：53）
在 org.gradle.internal.operations.DefaultBuildOperationExecutor.call（DefaultBuildOperationExecutor.java：73）
在 org.gradle.internal.execution.steps.ExecuteStep.execute（ExecuteStep.java：56）
在 org.gradle.internal.execution.steps.ExecuteStep.execute（ExecuteStep.java：44）
在 org.gradle.internal.execution.steps.CancelExecutionStep.execute（CancelExecutionStep.java：41）
在 org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout（TimeoutStep.java：74）
在 org.gradle.internal.execution.steps.TimeoutStep.execute（TimeoutStep.java：55）
在 org.gradle.internal.execution.steps.PreCreateOutputParentsStep.execute（PreCreateOutputParentsStep.java：50）
在 org.gradle.internal.execution.steps.PreCreateOutputParentsStep.execute（PreCreateOutputParentsStep.java：28）
在 org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute（RemovePreviousOutputsStep.java：67）
在 org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute（RemovePreviousOutputsStep.java：37）
在 org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute（BroadcastChangingOutputsStep.java：61）
在 org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute（BroadcastChangingOutputsStep.java：26）
在 org.gradle.internal.execution.steps.CaptureOutputsAfterExecutionStep.execute（CaptureOutputsAfterExecutionStep.java：67）
在 org.gradle.internal.execution.steps.CaptureOutputsAfterExecutionStep.execute（CaptureOutputsAfterExecutionStep.java：45）
在 org.gradle.internal.execution.steps.ResolveInputChangesStep.execute（ResolveInputChangesStep.java：40）
在 org.gradle.internal.execution.steps.ResolveInputChangesStep.execute（ResolveInputChangesStep.java：29）
在 org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache（BuildCacheStep.java：189）
在 org.gradle.internal.execution.steps.BuildCacheStep.lambda$execute$1（BuildCacheStep.java：75）
在 org.gradle.internal.Either$Right.fold（Either.java：175）
在 org.gradle.internal.execution.caching.CachingState.fold（CachingState.java：62）
在 org.gradle.internal.execution.steps.BuildCacheStep.execute（BuildCacheStep.java：73）
在 org.gradle.internal.execution.steps.BuildCacheStep.execute（BuildCacheStep.java：48）
在 org.gradle.internal.execution.steps.StoreExecutionStateStep.execute（StoreExecutionStateStep.java：46）
在 org.gradle.internal.execution.steps.StoreExecutionStateStep.execute（StoreExecutionStateStep.java：35）
在 org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause（SkipUpToDateStep.java：76）
在 org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$2（SkipUpToDateStep.java：54）
在 org.gradle.internal.execution.steps.SkipUpToDateStep.execute（SkipUpToDateStep.java：54）
在 org.gradle.internal.execution.steps.SkipUpToDateStep.execute（SkipUpToDateStep.java：36）
在 org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute（MarkSnapshottingInputsFinishedStep.java：37）
在 org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute（MarkSnapshottingInputsFinishedStep.java：27）
在 org.gradle.internal.execution.steps.ResolveIncrementalCachingStateStep.executeDelegate（ResolveIncrementalCachingStateStep.java：49）
在 org.gradle.internal.execution.steps.ResolveIncrementalCachingStateStep.executeDelegate（ResolveIncrementalCachingStateStep.java：27）
在 org.gradle.internal.execution.steps.AbstractResolveCachingStateStep.execute（AbstractResolveCachingStateStep.java：71）
在 org.gradle.internal.execution.steps.AbstractResolveCachingStateStep.execute（AbstractResolveCachingStateStep.java：39）
在 org.gradle.internal.execution.steps.ResolveChangesStep.execute（ResolveChangesStep.java：65）
在 org.gradle.internal.execution.steps.ResolveChangesStep.execute（ResolveChangesStep.java：36）
在 org.gradle.internal.execution.steps.ValidateStep.execute（ValidateStep.java：106）
在 org.gradle.internal.execution.steps.ValidateStep.execute（ValidateStep.java：55）
在 org.gradle.internal.execution.steps.AbstractCaptureStateBeforeExecutionStep.execute（AbstractCaptureStateBeforeExecutionStep.java：64）
在 org.gradle.internal.execution.steps.AbstractCaptureStateBeforeExecutionStep.execute（AbstractCaptureStateBeforeExecutionStep.java：43）
在 org.gradle.internal.execution.steps.AbstractSkipEmptyWorkStep.executeWithNonEmptySources（AbstractSkipEmptyWorkStep.java：125）
在 org.gradle.internal.execution.steps.AbstractSkipEmptyWorkStep.execute（AbstractSkipEmptyWorkStep.java：61）
在 org.gradle.internal.execution.steps.AbstractSkipEmptyWorkStep.execute（AbstractSkipEmptyWorkStep.java：36）
在 org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute（MarkSnapshottingInputsStartedStep.java：38）
在 org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute（LoadPreviousExecutionStateStep.java：36）
在 org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute（LoadPreviousExecutionStateStep.java：23）
在 org.gradle.internal.execution.steps.HandleStaleOutputsStep.execute（HandleStaleOutputsStep.java：75）
在 org.gradle.internal.execution.steps.HandleStaleOutputsStep.execute（HandleStaleOutputsStep.java：41）
在 org.gradle.internal.execution.steps.AssignMutableWorkspaceStep.lambda$execute$0（AssignMutableWorkspaceStep.java：35）
在 org.gradle.api.internal.tasks.execution.TaskExecution$4.withWorkspace（TaskExecution.java：289）
在 org.gradle.internal.execution.steps.AssignMutableWorkspaceStep.execute（AssignMutableWorkspaceStep.java：31）
在 org.gradle.internal.execution.steps.AssignMutableWorkspaceStep.execute（AssignMutableWorkspaceStep.java：22）
在 org.gradle.internal.execution.steps.ChoosePipelineStep.execute（ChoosePipelineStep.java：40）
在 org.gradle.internal.execution.steps.ChoosePipelineStep.execute（ChoosePipelineStep.java：23）
在 org.gradle.internal.execution.steps.ExecuteWorkBuildOperationFiringStep.lambda$execute$2（ExecuteWorkBuildOperationFiringStep.java：67）
在 org.gradle.internal.execution.steps.ExecuteWorkBuildOperationFiringStep.execute（ExecuteWorkBuildOperationFiringStep.java：67）
在 org.gradle.internal.execution.steps.ExecuteWorkBuildOperationFiringStep.execute（ExecuteWorkBuildOperationFiringStep.java：39）
在 org.gradle.internal.execution.steps.IdentityCacheStep.execute（IdentityCacheStep.java：46）
在 org.gradle.internal.execution.steps.IdentityCacheStep.execute（IdentityCacheStep.java：34）
在 org.gradle.internal.execution.steps.IdentifyStep.execute（IdentifyStep.java：48）
在 org.gradle.internal.execution.steps.IdentifyStep.execute（IdentifyStep.java：35）
在 org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute（DefaultExecutionEngine.java：61）
在 org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid（ExecuteActionsTaskExecuter.java：127）
在 org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute（ExecuteActionsTaskExecuter.java：116）
在 org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute（FinalizePropertiesTaskExecuter.java：46）
在 org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute（ResolveTaskExecutionModeExecuter.java：51）
在 org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute（SkipTaskWithNoActionsExecuter.java：57）
在 org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute（SkipOnlyIfTaskExecuter.java：74）
在 org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute（CatchExceptionTaskExecuter.java：36）
在 org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask（EventFiringTaskExecuter.java：77）
在 org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call（EventFiringTaskExecuter.java：55）
在 org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call（EventFiringTaskExecuter.java：52）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute（DefaultBuildOperationRunner.java：200）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute（DefaultBuildOperationRunner.java：195）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute（DefaultBuildOperationRunner.java：66）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute（DefaultBuildOperationRunner.java：59）
在 org.gradle.internal.operations.DefaultBuildOperationRunner.execute（DefaultBuildOperationRunner.java：157）
在 org.gradle.internal.operations.DefaultBuildOperationRunner.execute（DefaultBuildOperationRunner.java：59）
在 org.gradle.internal.operations.DefaultBuildOperationRunner.call（DefaultBuildOperationRunner.java：53）
在 org.gradle.internal.operations.DefaultBuildOperationExecutor.call（DefaultBuildOperationExecutor.java：73）
在 org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute（EventFiringTaskExecuter.java：52）
在 org.gradle.execution.plan.LocalTaskNodeExecutor.execute（LocalTaskNodeExecutor.java：42）
在 org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute（DefaultTaskExecutionGraph.java：331）
在 org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute（DefaultTaskExecutionGraph.java：318）
在 org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.lambda$execute$0（DefaultTaskExecutionGraph.java：314）
在 org.gradle.internal.operations.CurrentBuildOperationRef.with（CurrentBuildOperationRef.java：80）
在 org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute（DefaultTaskExecutionGraph.java：314）
在 org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute（DefaultTaskExecutionGraph.java：303）
在 org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute（DefaultPlanExecutor.java：463）
在 org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run（DefaultPlanExecutor.java：380）
在 org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute（ExecutorPolicy.java：64）
在 org.gradle.internal.concurrent.AbstractManagedExecutor$1.run（AbstractManagedExecutor.java：47）
原因：org.jetbrains.kotlin.gradle.tasks.CompilationErrorException： Compilation error。有关更多详细信息，请参阅日志
位于 org.jetbrains.kotlin.gradle.tasks.TasksUtilsKt.throwExceptionIfCompilationFailed（tasksUtils.kt：20）
位于 org.jetbrains.kotlin.compilerRunner.GradleKotlinCompilerWork.run（GradleKotlinCompilerWork.kt：141）
位于 org.jetbrains.kotlin.compilerRunner.GradleCompilerRunnerWithWorkers$GradleKotlinCompilerWorkAction.execute（GradleCompilerRunnerWithWorkers.kt：73）
在 org.gradle.workers.internal.DefaultWorkerServer.execute（DefaultWorkerServer.java：63）
在 org.gradle.workers.internal.NoIsolationWorkerFactory$1$1.create（NoIsolationWorkerFactory.java：66）
在 org.gradle.workers.internal.NoIsolationWorkerFactory$1$1.create（NoIsolationWorkerFactory.java：62）
在 org.gradle.internal.classloader.ClassLoaderUtils.executeInClassloader（ClassLoaderUtils.java：100）
在 org.gradle.workers.internal.NoIsolationWorkerFactory$1.lambda$execute$0（NoIsolationWorkerFactory.java：62）
在 org.gradle.workers.internal.AbstractWorker$1.call（AbstractWorker.java：44）
在 org.gradle.workers.internal.AbstractWorker$1.call（AbstractWorker.java：41）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute（DefaultBuildOperationRunner.java：200）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute（DefaultBuildOperationRunner.java：195）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute（DefaultBuildOperationRunner.java：66）
在 org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute（DefaultBuildOperationRunner.java：59）
在 org.gradle.internal.operations.DefaultBuildOperationRunner.execute（DefaultBuildOperationRunner.java：157）
在 org.gradle.internal.operations.DefaultBuildOperationRunner.execute（DefaultBuildOperationRunner.java：59）
在 org.gradle.internal.operations.DefaultBuildOperationRunner.call（DefaultBuildOperationRunner.java：53）
在 org.gradle.internal.operations.DefaultBuildOperationExecutor.call（DefaultBuildOperationExecutor.java：73）
在 org.gradle.workers.internal.AbstractWorker.executeWrappedInBuildOperation（AbstractWorker.java：41）
在 org.gradle.workers.internal.NoIsolationWorkerFactory$1.execute（NoIsolationWorkerFactory.java：59）
在 org.gradle.workers.internal.DefaultWorkerExecutor.lambda$submitWork$0（DefaultWorkerExecutor.java：174）
在 org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.runExecution（DefaultConditionalExecutionQueue.java：187）
在 org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.access$700（DefaultConditionalExecutionQueue.java：120）
在 org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner$1.run（DefaultConditionalExecutionQueue.java：162）
在 org.gradle.internal.Factories$1.create（Factories.java：31）
在 org.gradle.internal.work.DefaultWorkerLeaseService.withLocks（DefaultWorkerLeaseService.java：264）
在 org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread（DefaultWorkerLeaseService.java：128）
在 org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread（DefaultWorkerLeaseService.java：133）
在 org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.runBatch（DefaultConditionalExecutionQueue.java：157）
在 org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.run（DefaultConditionalExecutionQueue.java：126）
...还有 2 个


构建在 2 分 32 秒内失败
23 个可作任务：23 个已执行
错误：流程完成，退出代码为 1。